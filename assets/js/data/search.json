[ { "title": "Xcode 无需开发者账号分发 iOS app", "url": "/posts/Xcode_no_dev_account/", "categories": "Development", "tags": "Xcode", "date": "2025-01-31 15:06:00 +0000", "snippet": "在菜单栏上选择”Product-&gt;Archieve”，稍等片刻，项目归档完毕后会弹出窗口在弹出的窗口中右键，选择“在访达中显示”对xcarchive后缀的文件右键，选择“显示包内容”进入文件”Products”，将”Applications”这个文件夹改名为”Payload”，之后右键压缩。将压缩的zip文件后缀改为ipa，前面文件名可以自定义，这样就得到了安装包 必须有Payloa...", "content": "在菜单栏上选择”Product-&gt;Archieve”，稍等片刻，项目归档完毕后会弹出窗口在弹出的窗口中右键，选择“在访达中显示”对xcarchive后缀的文件右键，选择“显示包内容”进入文件”Products”，将”Applications”这个文件夹改名为”Payload”，之后右键压缩。将压缩的zip文件后缀改为ipa，前面文件名可以自定义，这样就得到了安装包 必须有Payload文件夹，这是iOS程序正确运行的关键最后使用自签工具即可安装到其他人的设备上，这样无需开发者账号，也无需Xcode多次部署。" }, { "title": "SwiftUI 计算器使用指南", "url": "/posts/SwiftUICalculatorIntroduction/", "categories": "SwiftUI", "tags": "", "date": "2024-06-24 06:40:00 +0000", "snippet": "主屏幕快捷操作通过使用 Haptic Touch 来触发快捷操作，上次计算的结果将保存在剪贴板中计算功能与iPhone原生计算器相同，四则运算的优先级进行运算，支持百分号、符号切换、连等等运算顺序及逻辑，支持滑动删除最后一位。文本替换功能输入触发密钥（初始值为12345）并长按来进入设置界面。在“设置-文本替换”中点击右上角加号新增文本替换。输入码是触发字符，通常为数字，短语为要替换成的文本...", "content": "主屏幕快捷操作通过使用 Haptic Touch 来触发快捷操作，上次计算的结果将保存在剪贴板中计算功能与iPhone原生计算器相同，四则运算的优先级进行运算，支持百分号、符号切换、连等等运算顺序及逻辑，支持滑动删除最后一位。文本替换功能输入触发密钥（初始值为12345）并长按来进入设置界面。在“设置-文本替换”中点击右上角加号新增文本替换。输入码是触发字符，通常为数字，短语为要替换成的文本。设置成功后摇动您的iPhone即可替换显示。 您可以轻点来编辑文本替换，向右滑动来禁用某一文本替换，也可向左滑动删除该文本替换。表情雨功能当短语中包含以下emoji的其中之一就会触发表情雨：🎂 💕 🫶 🫰 🥰 🥳 💓 ❤️ ✨ 😘 您可以在设置中控制表情雨生成速率、持续时长。触感反馈当在设置中打开“触感反馈”时，点击计算器按钮会带来触觉反馈，关闭后则与原生计算器相同，不再提供触觉反馈 即使关闭“触感反馈”在设置中的其他页面仍有触感反馈多语言该App支持中英两种语言，可按需切换" }, { "title": "使用 SwiftUI 来做仿做一个原生计算器(技术篇)", "url": "/posts/SwiftUICalculator/", "categories": "SwiftUI", "tags": "", "date": "2024-06-24 06:40:00 +0000", "snippet": "概述这里我们将会使用MVVM架构来编写这个项目，本文将主要探讨计算器计算功能实现的步骤。 代码已开源：https://github.com/Jo-CRuiSe/SwiftUICalculatorViewscalcButtonView：单个按钮样式contentsView：计算器app样式ViewModel(ContentViewModel)变量定义@Published var displa...", "content": "概述这里我们将会使用MVVM架构来编写这个项目，本文将主要探讨计算器计算功能实现的步骤。 代码已开源：https://github.com/Jo-CRuiSe/SwiftUICalculatorViewscalcButtonView：单个按钮样式contentsView：计算器app样式ViewModel(ContentViewModel)变量定义@Published var display: String = \"0\" //计算器显示字符@Published var action: Action? //按键操作@Published var constantlyLit: Bool = false //操作是否常亮@Published var ACPressed = false //是否按下AC键private var operandStack: [String] = [] //数字栈private var operatorStack: [String] = [] //符号栈private var lastPressedButton: lastOprationType = .clear//上次按下按钮类型private var shouldClearAll: Bool = true //清除全部栈还是清除当前数字栈的最后一位private var lastNum = \"\" //上次按下数字private var lastOperator = \"\" //上次按下操作var canDeleteLastDigit = true //是否允许左右滑动显示界面来删除最后一位var stacked = false //是否有元素入栈基本运算逻辑按键类型 数字（0～9） 运算（+，-，×，÷ ） 符号切换键（+/-) 百分号（%） 等于（=） 清除（AC）数字处理逻辑 追加：当上一个输入的是数字时，追加新数字。如果数字栈中最后一个元素是0，则直接显示当前数字。数字除去小数点后最大长度为9。 清除重新显示：当上次进行了运算，显示当前数字；若上次进行了特殊操作或清除，先清空栈再显示当前数字 if lastPressedButton == .operand { var operand = operandStack.popLast() ?? \"0\" if operand == \"0\" { operand = text } else { operand.append(text) } operandStack.append(operand) lastPressedButton = .operand} else if lastPressedButton == .clear || lastPressedButton == .specialOperator { _ = operandStack.popLast() operandStack.append(text)}else { display = text operandStack.append(text)}lastPressedButton = .operand运算处理逻辑 更改算符：上一个输入也为算符，并且当前操作不是 = 或 +/- 则替换符号栈最后一个符号if lastPressedButton == .operation &amp;&amp; action != .equals &amp;&amp; action != .plusMinus{ _ = operatorStack.popLast()} 压入运算符栈：上一个运算符优先级小于等于当前运算符优先级 + - × ÷进行运算：上一个运算符优先级大于当前运算符优先级 当输入运算符后，运算符栈内只可能有3种情况： 有一个运算符：运算符为刚输入的运算符，则不做任何操作 有两个运算符：可能组合为低优先级+高优先级，或高优先级+低优先级，后者对高优先级进行处理 有三个运算符：可能组合为低优先级+高优先级+高优先级，例如+ × ×，或低优先级+高优先级+低优先级，例如+ × + 符号切换键处理逻辑 当上个操作为运算符时，将“-0”压入数字栈 当上个操作不为运算符时，取出上个数字，并取相反数if lastPressedButton == .operation { operandStack.append(\"-0\") display = \"-0\"} else { var last = operandStack.popLast() ?? \"0\" if last.first == \"-\" { last.removeFirst() } else { last = \"-\" + last } operandStack.append(last) display = last}lastPressedButton = .plusMinus百分号处理逻辑 数字栈中最后一个元素 ÷ 100canDeleteLastDigit = falseif operandStack.last == \"0\" &amp;&amp; operandStack.last == nil { lastPressedButton = .percent return} else if lastPressedButton == .operand || lastPressedButton == .percent || lastPressedButton == .equal { let numString = operandStack.popLast() ?? \"0\" let num = (convertToDouble(numString) ?? 0.0) / 100.0 operandStack.append(String(num)) display = convertToString(num)} else if lastPressedButton == .operation { let numString = operandStack.popLast() ?? \"0\" let num = (convertToDouble(numString) ?? 0.0) / 100.0 operandStack.append(numString) operandStack.append(String(num)) display = convertToString(num)}lastPressedButton = .percent等于号处理逻辑将数字栈与符号栈进行组合运算 按下等于号前，符号栈内可能情况为 无运算符：则重复运算上次运算符与操作数组合。5-2*3 -&gt; -1 -3 -9 -27 有一个运算符： 有两个运算符：组合为低优先级+高优先级 有三个运算符 private func equalButtonPressed() { canDeleteLastDigit = false if lastPressedButton == .operation, let operand = operandStack.last { operandStack.append(operand) } if operatorStack.count == 1{ guard let operation = operatorStack.popLast(), let rightNum = operandStack.popLast(), let leftNum = operandStack.popLast() else {return} lastOperator = operation lastNum = rightNum let answer = solve(leftNum: leftNum, operation: operation, rightNum: rightNum) operandStack.append(answer) display = answer } else if operatorStack.count == 2{ guard let secondOperator = operatorStack.popLast(), let firstOperator = operatorStack.popLast(), let thirdNum = operandStack.popLast(), let secondNum = operandStack.popLast(), let firstNum = operandStack.popLast() else { return } lastOperator = secondOperator lastNum = thirdNum let answer1 = solve(leftNum: secondNum, operation: secondOperator, rightNum: thirdNum) let answer2 = solve(leftNum: firstNum, operation: firstOperator, rightNum: answer1) operandStack.append(answer2) display = answer2 } else { // count == 0 if lastNum == \"\" &amp;&amp; lastOperator == \"\" { display = operandStack.last ?? \"0\" } else { let operand = operandStack.popLast() ?? \"0\" let answer = solve(leftNum: operand, operation: lastOperator, rightNum: lastNum) operandStack.append(answer) display = answer } }}清除处理逻辑恢复初始设置private func clearAll() { display = \"0\" action = nil constantlyLit = false canDeleteLastDigit = false ACPressed = true operandStack = [] operatorStack = [] stacked = false lastNum = \"\" lastOperator = \"\"}显示处理逻辑 数字栈为空则显示0 数字栈不为空则显示栈内最后一个元素 显示最大长度为9个字符，长于9个使用科学计数法，2.81531e10，3.362826e9，除去小数点和负号，最长显示9个字符 对超过显示范围的数字使用科学计数法（代码中限制了精度为10^{-15}） 2.457343726 -&gt; 2.45734373 2.81531e10 3.72529e -9测试集3 + 2 × 5 - 43 × 2 + 5 × 43 + 2 = % % % % %1 ÷ 4 = = = = = = = = = = = = = = =123 × = = = = =5 + +/- 3 =5+ +/- =附加功能表情雨" }, { "title": "新春快乐 动画（2024）", "url": "/posts/HappyNewYear2024/", "categories": "影视后期", "tags": "Cinema 4D, After Effects, 动画", "date": "2024-02-09 12:24:00 +0000", "snippet": "概述 使用的工具：Cinema 4D、After Effects、Photoshop、Keynote 制作周期约 25 天 视频分辨率为 1920x1080，帧率25fps，原视频体积591.2MB1 为了更流畅的阅读体验，文章中的图片并非原本无损格式的图片，而是经过压缩后的图片。创作过程素材选取与普通剪辑和特效不同的是，制作3D动画是一个完全从无到有的过程，没有任何现成的片段可供参...", "content": "概述 使用的工具：Cinema 4D、After Effects、Photoshop、Keynote 制作周期约 25 天 视频分辨率为 1920x1080，帧率25fps，原视频体积591.2MB1 为了更流畅的阅读体验，文章中的图片并非原本无损格式的图片，而是经过压缩后的图片。创作过程素材选取与普通剪辑和特效不同的是，制作3D动画是一个完全从无到有的过程，没有任何现成的片段可供参考。这个过程需要经历建模、动画、材质、渲染和后期等一系列步骤。其中的难点在于如何将想象中的场景构建出来、如何构图以及如何使其具有连贯性。首先，我们需要确定表现风格，是卡通风格还是写实风格？然后，收集与该主题相关的素材元素。有时候，仅凭空想很难具体化，这时我们可以在网上寻找优秀摄影师和设计师的作品作为参考素材，如此上手便容易许多。时间线1.16 ～ 1.19 完成分镜2、3、4、5的模型搭建，部分材质处理，预合成；1.20 ～ 1.23 微调模型，尝试搭建分镜6；1.24 ～ 1.28 完成分镜2、3、4、5渲染，准备制作片尾；1.29 ～ 1.31 所有分镜进行合并剪辑、配乐，优化；2.1 ～ 2.2 完成分镜1搭建、渲染，博客撰写；2.2 ～ 2.6 有比赛，停止更新；2.7 ～ 2.9 博客撰写、最后的检查工作、预发布。技术部分考虑到篇幅长度，只展示制作思路分镜1场景1展示的是一块镶有龙的布料在飘动。在 PS 中，需要准备一张龙的贴图，并使用色彩范围工具抠出龙的轮廓，然后通过调整图层的饱和度为0，得到一张黑白贴图。在这里，只需使用 Octane 混合材质球，将“Amount”属性连接到黑白贴图，然后将材质节点分别连接到布料和金色材质。最后，给平面添加布料标签、涡流场、顶点贴图和 HDR 环境即可。分镜2场景2与场景1的制作思路类似，仍然使用混合材质球来创建材质效果。对于文字部分，可以使用“置换”节点来呈现真实的凹凸感。对于红底纸张部分，可以添加“噪波”节点来调控漫反射的程度，同时突出纸张的质感。分镜3灯笼的框架是通过对球体进行切割后的一部分，利用平滑效果器实现接缝处不平滑的效果。上下的吊绳可以使用插件“Reeper”添加更多细节，而灯笼穗则可以使用毛发工具生成后梳理造型。为了使灯笼能够随风摇摆，需要在场景中添加一个风场，并给灯笼添加震动标签。关于灯笼的材质制作，有一种有趣的方法是关闭“漫射”通道，打开“发光”通道，使用黄色到红色的渐变，并添加衰减效果，这样可以实现从内部向外部发光的效果。分镜4、5这两个场景原本计划是一镜到底，展示生饺子瞬间变为熟饺子的动画。然而，由于动力学的控制困难以及音乐节奏没有达到预期的快节奏，最终决定改为两个镜头。由于碗的青花瓷纹理的特殊性，我不得不自己制作UV贴图。在 Cinema 4D 2023 版本中，使用“UVEdit”模式，并将模型选为边模式，选择一条展开边并生成一个 PSD 文件，在 PS 中将纹理放置到相应位置，这样就完成了简单的碗的 UV 制作。分镜6场景6的制作时间可以说是所有场景中最长的。由于没有现成的贴图，所以我需要逐个在 PS 中绘制翻动的三页日历上的文字，同时还要参考黄历来填写日历的内容。为了突出纸的质感，需要给材质添加“Noise”节点。为了表现纸张的薄度，可以使用“Emission”来调整透光率。但是这样的调整非常耗时且困难。可以使用“Side”节点来为纸张的正反两面制作贴图，反面的颜色可以较浅，以实现大致的效果。在完成贴图后，在渲染过程中遇到了动画问题。由于日历是有厚度的，导致每张纸的轴心很难确定。为了实现纸张翻页的效果，必须找到一个轴心。我采用的方法是将纸的上边中点作为轴心，这样旋转的动画大体上不会出错。对于具体的穿模部分，需要手动调整关键帧来修正轨迹。分镜7场景7与场景2的制作思路相似，但由于需要在文字下方的花纹和红纸上应用混合材质球，同时文字和纸张需要单独的材质球，因此需要使用两个混合材质球来制作贴图。片尾在片尾中，制作难点是“龍”这个字。可以将它视为两部分，左边无动画，右边有动画。在 PS 中分别制作好两部分，并在图层上选择“混合模式”-“渐变叠加”，以实现类似白色高光的效果。对于“龍”的变化效果，可以使用“Sparkle”动画，一个出场，一个入场，并且让它们在相同的方向上同时进行。最后，在 Keynote 中设置好所有动画的顺序，以实现所需的效果。Produced by Zhou在我以往的视频中，文字出现的动画通常使用简单的渐现或擦除等效果制作。这种方法的优点是制作简单、效果明显，节省时间，但不够精致，动画的自定义程度较低。所以，在本次制作中，我使用了 AE 中的“路径修剪”方法来实现文字的动画效果。带来的影响是制作过程耗时达到了三个小时。这是因为每个文字需要逐个制作动画，并手动调整动画出现的时间和速度。同时，在视频中，还需要根据视频总时长的限制来调整文字出现、持续和结束的时间。这种方法虽然耗时较长，但能够实现更精细和个性化的文字动画效果。音乐、转场及其他这次动画中使用了张军的《霓裳羽衣》作为背景音乐，并对音乐进行了改动。实际上，在选择音乐方面，并不是在所有片段都渲染完成后才开始的。我从制作第一个镜头时就开始选择音乐，并对音乐进行了初步剪辑。如果你听过原曲，你会发现我将这段音频分成了4段，并在它们的衔接上做了一些处理。在之后制作其他片段时，我也根据音乐的速度来调整动画的速度，音乐的长度也影响着动画的长度。此外，音乐的鼓点也被视为动画潜在的转场位置，在制作过程中会加以考虑。这样的处理有助于营造出与音乐相协调的整体效果。为了确保观众的听觉体验舒适，背景音乐的声音强度范围应在 -6dB 到 0dB。在 AE 中，可以通过调整图层的透明度和应用镜头模糊的关键帧来实现淡出转场效果。此外，还可以使用轨道遮罩来实现笔刷转场效果。在导出视频后，我发现 MacBook 上使用的 ColorLCD 色彩空间（用于剪辑）与最终成片使用的 Adobe RGB 色彩空间之间存在一些颜色差异。为了解决这个问题，需要重新进行调色。最终，视频导出为1920x1080 25fps ProRes2格式，以确保高质量的输出。小缺憾尽管我预先尝试使用 Octane 渲染器制作图片，但在调节材质时仍然无法完全达到预期目标。例如，在场景5中，煮熟的饺子的边缘应该是晶莹剔透的，但无论我如何调节，效果都不理想。在场景6中，我忘记添加日历上的穿孔和封面材质。然而，这些问题在最后检查阶段才被发现，重新渲染的时间已经不够了，最终只能以这种形式呈现给大家。特别鸣谢感谢 Jiaming Liu 在这篇博客中对写作问题提出的宝贵建议。 帧序列由许多连续的静态图片（帧）组成，后期通过剪辑软件转换为视频。此工程的帧序列体积为2.85GB &#8617; 考虑到上传到社交平台会有大量的压缩，使用移动端常见的1080p 25fps以减小视频体积从而保证压缩后仍具有较好效果 &#8617; " }, { "title": "How to Use UPE", "url": "/posts/HowToUseUPE/", "categories": "Tutorial", "tags": "", "date": "2024-02-06 01:41:00 +0000", "snippet": "先决条件请先根据 README 来完成基本配置。配置方法注册 Leancloud为了能够使用登录功能，请注册Leancloud作为后端登录注册网址：https://console.leancloud.cn/register，在左上角选择华北节点 华东地区节点在2024.1.30关闭，国际版对国内评论系统有限制创建应用注册完成后左上角选择Create app，App name随意取，在”Ap...", "content": "先决条件请先根据 README 来完成基本配置。配置方法注册 Leancloud为了能够使用登录功能，请注册Leancloud作为后端登录注册网址：https://console.leancloud.cn/register，在左上角选择华北节点 华东地区节点在2024.1.30关闭，国际版对国内评论系统有限制创建应用注册完成后左上角选择Create app，App name随意取，在”App price plan”中选择Developer，完成后点击Create应用设置进入app的设置，在侧边栏选择”Settings”-“App keys”（可能需要向下滚动）这里的AppID、AppKey和Server URLs对应_config.yml文件中的相应内容Leancloud: appId: 'example' # fill with your Leancloud appId appKey: 'example' # fill with your Leancloud appKey serverURL: 'example' # fill with your Leancloud serverURL allowRegister: true # allow registration for your website AppID：全局唯一的应用标识符，不可变更。 AppKey：公开的访问密钥，适用于在公开的客户端中使用。使用 AppKey 进行的访问受到 ACL 等权限限制。 MasterKey：私密的访问密钥，适用于在服务器等受信任环境中使用。使用 MasterKey 进行的访问拥有最高权限，不受 ACL 等权限限制。安全由于App ID、App Key、ServerURL是在配置文件中以明文形式储存的，使用为了安全，请在”Settings”-“Security”（可能需要向下滚动）中的”Web secure domains”下的文本框中添加您的域名，例如https://username.github.io。同时为了方便在本地调试，可以添加127.0.0.1:4000 127.0.0.是本机ip，4000是本地调试端口号，如果您未修改过相关配置，Jekyll默认使用4000端口 当添加多个域名的时候需要换行用户信息存储用户信息存储在”Data Storage”-“Data”（可能需要向下滚动）下的”_User”内。为了使登录的用户能够更改头像和昵称，请在上方的”Permission”-“Default ACL”-Edit将读写权限改为”All users”邮箱注册权限为了便使用邮箱更改密码和防止恶意注册，请在”Authentication”-“Settings”（可能需要向下滚动）中将前两个属性打勾 Enable email address verification Do not allow users with unverified email addresses to log in 登录测试现在登录您自定义的网址：https://username.github.io/unpublished-posts-enhancement，如果运行正确您会被redirect到https://username.github.io/unpublished-posts-enhancement/login。现在尝试注册一个账号，需要填写用户名、密码、邮箱。进行邮箱验证后就可以正常登录了。再到Leancloud下的”Data Storage”-“Data”-“_User”，您就可以看到已注册的用户信息了。 由于Leancloud的安全限制，您无法查看任何人的密码登录后的使用基础使用如果以上步骤您都顺利通过，那么您现在可以像使用原本的Chirpy主题的博客一样来对当前项目进行更改。 在提交时请注意仓库名称是否选取正确进阶使用请确保您有html相关知识，并且您有足够的信心来更新这个项目中的代码。_includes.├── _includes│ └── loader.html │ └── login-check.html│ └── sidebar.html loader.html 是有关加载等待动画的代码，相关的scss已经写在”_sass”-“addon”-“loader.scss” login-check.html 是有关检查用户是否登录的代码 sidebar.html 在原作者Chirpy的代码基础上将侧边栏进行了修改guest-Avatar.├── _assets│ └── config│ \t└── guest-avatar.jpg guest-avatar.jpg 存放默认用户头像，如果进行更改，请仍命名为guest-avatar.jpg，否则要到”_config.yml”中修改头像路径login and forgot.├── login│ └── index.html│ └── forgot│ \t└── index.html.├── _layouts│ └── login.html│ └── forgot.html 修改有关login和forgot相关代码请到第二个目录结构下升级版本在 unpublished-posts-enhancement 3.0.0 版本后您可以在Gemfile中进行升级。- gem \"jekyll-theme-chirpy-customized-upe\", \"~&gt; 1.0.0\"+ gem \"jekyll-theme-chirpy-customized-upe\", \"~&gt; 3.0.0\"然后在根目录运行bundle update jekyll-theme-chirpy-customizd-upe 如果您的主题为”jekyll-theme-chirpy”，请更改为”jekyll-theme-chirpy-customized-upe”，并写入版本号 请勿使用 3.0.0 以前的版本，因为版本可能不存在或存在bug，具体版本号见仓库jekyll-theme-chirpy-customized-upe的release部分最后该文章详细地指导您如何使用unpublished-posts-enhancement，如果您遇到任何困难可以到评论区进行留言或使用邮件等通讯方式与我取得联系。如果您觉得我的项目还不错的话不要忘记给我一个star😉" }, { "title": "二阶方程常数变易法", "url": "/posts/MethodOfVariationOfConstants/", "categories": "学习笔记", "tags": "数理方法", "date": "2024-01-03 08:45:00 +0000", "snippet": "公式推导已知方程：\\[\\begin{cases} y^{\\prime \\prime}(x) + \\omega^{2}(x) = f(x)\\\\ y(0) = \\alpha, \\quad y^{\\prime}(0) = \\beta\\end{cases}\\]可以得到相应的齐次方程：$ y^{\\prime \\prime}(x) + \\omega^{2}(x) = 0 $通解：$ y(x) =...", "content": "公式推导已知方程：\\[\\begin{cases} y^{\\prime \\prime}(x) + \\omega^{2}(x) = f(x)\\\\ y(0) = \\alpha, \\quad y^{\\prime}(0) = \\beta\\end{cases}\\]可以得到相应的齐次方程：$ y^{\\prime \\prime}(x) + \\omega^{2}(x) = 0 $通解：$ y(x) = C_{1}cos(\\omega x) + C_{2}sin(\\omega x) $由常数变易法，$ y(x) = u(x)cos(\\omega x) + v(x)sin(\\omega x) $构造二元线性方程组\\[y^{\\prime}(x) = [u^{\\prime}(x) cos(\\omega x) + v^{\\prime}(x) sin(\\omega x) + [-\\omega u(x) sin(\\omega x) + \\omega v(x)cos(\\omega x)]\\]令第一个方程为 0，即\\[\\begin{equation}u^{\\prime}(x) cos(\\omega x) + v^{\\prime}(x) sin(\\omega x) = 0 \\tag{1}\\end{equation}\\]余下部分再求导：\\[y^{\\prime \\prime}(x) = [-\\omega u^{\\prime}(x) sin(\\omega x) + \\omega v^{\\prime}(x) cos(\\omega x)] - [\\omega^{2} u(x) cos(\\omega x) + \\omega^{2} v(x) sin(\\omega x)]\\]代入原方程得到：\\[\\begin{equation}-\\omega u^{\\prime}(x) sin(\\omega x) + \\omega v^{\\prime}(x) cos(\\omega x) = f(x) \\tag{2}\\end{equation}\\](1)、(2)联立得\\[\\begin{bmatrix} cos(\\omega x) &amp; sin(\\omega x) \\\\ -\\omega sin(\\omega x) &amp; \\omega cos(\\omega x)\\end{bmatrix} \\begin{bmatrix} u^{\\prime}(x) \\\\ v^{\\prime}(x)\\end{bmatrix} =\\begin{bmatrix} 0 \\\\ f(x)\\end{bmatrix}\\]由克莱姆法则：\\[D = \\begin{vmatrix} cos(\\omega x) &amp; sin(\\omega x) \\\\ -\\omega sin(\\omega x) &amp; \\omega cos(\\omega x)\\end{vmatrix} = \\omega\\]\\[D_{1} = \\begin{vmatrix} 0 &amp; sin(\\omega x) \\\\ f(x) &amp; \\omega cos(\\omega x)\\end{vmatrix} = -f(x)sin(\\omega x)\\]\\[D_{2} = \\begin{vmatrix} cos(\\omega x) &amp; 0 \\\\ -\\omega sin(\\omega x) &amp; f(x) \\end{vmatrix} = f(x)cos(\\omega x)\\]解得：\\[u'(x) = \\frac{D_1}{D} = -\\frac{1}{\\omega}f(x)sin(\\omega x)\\]\\[v'(x) = \\frac{D_2}{D} = \\frac{1}{\\omega}f(x)cos(\\omega x)\\]代入通解中得到：\\[\\begin{equation}y = -\\frac{1}{\\omega} cos(\\omega x) \\int_{0}^{x} sin(\\omega \\xi) f(\\xi) d\\xi + \\frac{1}{\\omega} \\int_{0}^{x} cos(\\omega \\xi)f(\\xi)d\\xi + C_3 cos(\\omega x) + C_4 sin(\\omega x) \\tag{3}\\end{equation}\\]利用初始条件：$ C_3 = \\alpha, C_4 = \\frac{\\beta}{\\omega} $ 代入 (3) 中，并用和差化积公式化简：\\[y(x) = \\alpha cos(\\omega x) + \\frac{\\beta}{\\omega} sin(\\omega x) + \\frac{1}{\\omega} \\int_{0}^{x}sin[\\omega (x - \\xi)] f(\\xi)d\\xi\\]补充知识——和差化积、积化和差公式和差化积\\[sin \\alpha + sin \\beta = 2 sin \\frac{\\alpha + \\beta}{2} cos \\frac{\\alpha - \\beta}{2}\\]\\[sin \\alpha - sin \\beta = 2 cos \\frac{\\alpha + \\beta}{2} sin \\frac{\\alpha - \\beta}{2}\\]\\[cos \\alpha + cos \\beta = 2 cos \\frac{\\alpha + \\beta}{2} cos \\frac{\\alpha - \\beta}{2}\\]\\[cos \\alpha - cos \\beta = - 2 sin \\frac{\\alpha + \\beta}{2} sin \\frac{\\alpha - \\beta}{2}\\]积化和差\\[sin \\alpha cos \\beta = \\frac{1}{2} [sin(\\alpha + \\beta) + sin(\\alpha - \\beta)]\\]\\[cos \\alpha sin \\beta = \\frac{1}{2} [sin(\\alpha + \\beta) - sin(\\alpha - \\beta)]\\]\\[cos \\alpha cos \\beta = \\frac{1}{2} [cos(\\alpha + \\beta) + cos(\\alpha - \\beta)]\\]\\[sin \\alpha sin \\beta = -\\frac{1}{2} [cos(\\alpha + \\beta) - cos(\\alpha - \\beta)]\\]" }, { "title": "矢量分析与坐标变换知识整理", "url": "/posts/VectorAnalysisAndCoordinateTransformation/", "categories": "学习笔记", "tags": "数理方法", "date": "2023-12-11 06:39:00 +0000", "snippet": " 2024.03.05 将电磁场的内容合并进来，证明过程见电磁场相关书籍坐标变换1直角坐标系位置矢量：\\[\\vec{r} = x \\widehat{e}_{x} + y \\widehat{e}_{y} + z \\widehat{e}_{z}\\]线元矢量：\\[d\\vec{l} = dx \\widehat{e}_{x} + dy \\widehat{e}_{y} + dz \\widehat{...", "content": " 2024.03.05 将电磁场的内容合并进来，证明过程见电磁场相关书籍坐标变换1直角坐标系位置矢量：\\[\\vec{r} = x \\widehat{e}_{x} + y \\widehat{e}_{y} + z \\widehat{e}_{z}\\]线元矢量：\\[d\\vec{l} = dx \\widehat{e}_{x} + dy \\widehat{e}_{y} + dz \\widehat{e}_{z}\\]面元矢量：\\[\\begin{array}{l} \\left\\{\\begin{matrix} d\\vec{S}_{x}= dy dz \\widehat{e}_{x}\\\\ d\\vec{S}_{y}= dx dz \\widehat{e}_{y}\\\\ d\\vec{S}_{z}= dx dy \\widehat{e}_{z}\\end{matrix}\\right. \\end{array}\\]体积元：\\[dV = dxdydz\\]柱坐标系位置矢量：\\[\\vec{r} = \\rho \\widehat{e}_{\\rho} + z \\widehat{e}_{z}\\]线元矢量：\\[d\\vec{l} = d \\rho \\widehat{e}_{\\rho} + \\rho d\\varphi \\widehat{e}_{\\varphi} + dz \\widehat{e}_{z}\\]面元矢量：\\[\\begin{array}{l} \\left\\{\\begin{matrix} d\\vec{S}_{\\rho}= \\rho d\\varphi dz \\widehat{e}_{\\rho}\\\\ d\\vec{S}_{\\varphi}= d\\rho dz \\widehat{e}_{\\varphi}\\\\ d\\vec{S}_{z}= \\rho d\\rho d\\varphi \\widehat{e}_{z}\\end{matrix}\\right. \\end{array}\\]体积元：\\[dV = \\rho d\\rho d\\varphi dz\\]球坐标系位置矢量：\\[\\vec{r} = \\rho \\widehat{e}_{\\rho}\\]线元矢量：\\[d\\vec{l} = d\\rho \\widehat{e}_{\\rho} + \\rho d\\theta \\widehat{e}_{\\theta} + \\rho sin\\theta d\\varphi \\widehat{e}_{\\varphi}\\]面元矢量：\\[\\begin{array}{l} \\left\\{\\begin{matrix} d\\vec{S}_{\\rho}= \\rho^{2} sin\\theta d\\theta d\\varphi \\widehat{e}_{\\rho}\\\\ d\\vec{S}_{\\theta}= \\rho sin\\theta d\\rho d\\varphi \\widehat{e}_{\\theta}\\\\ d\\vec{S}_{\\varphi}= \\rho d\\rho d\\varphi \\widehat{e}_{\\varphi}\\end{matrix}\\right. \\end{array}\\]体积元：\\(dV = \\rho ^{2} sin\\theta d\\rho d\\theta d\\varphi\\)一般正交坐标系线元矢量：\\[d\\vec{l} = h_{1} du_{1} \\widehat{e}_{u_{1}} + h_{2} du_{2}\\widehat{e}_{u_{2}} + h_{3} du_{3} \\widehat{e}_{u_{3}}\\]面元矢量：\\[\\begin{array}{l} \\left\\{\\begin{matrix} d\\vec{S}_{1}= h_{2} h_{3} du_{2} du_{3} \\widehat{e}_{u_{1}}\\\\ d\\vec{S}_{2}= h_{1} h_{3} du_{1} du_{3} \\widehat{e}_{u_{2}}\\\\ d\\vec{S}_{3}= h_{1} h_{2} du_{1} du_{2} \\widehat{e}_{u_{3}}\\end{matrix}\\right. \\end{array}\\]体积元：\\[dV = h_{1} h_{2} h_{3} du_{1} du_{2} du_{3} \\quad (\\text{其中} h_{1} ,h_{2}, h_{3} \\text{叫做拉梅系数})\\]不同坐标系下的拉梅系数：   \\(h_{1}\\) \\(h_{2}\\) \\(h_{3}\\) 直角坐标 1 1 1 柱坐标 1 \\(\\rho\\) 1 球坐标 1 \\(\\rho\\) \\(\\rho sin\\theta\\) 坐标变换矩阵：\\[\\begin{bmatrix}\\widehat{e}_{\\rho}\\\\\\widehat{e}_{\\varphi}\\\\\\widehat{e}_{z}\\end{bmatrix} =\\begin{bmatrix}cos\\varphi &amp; sin\\varphi &amp; 0\\\\-sin\\varphi &amp; cos\\varphi &amp; 0\\\\0 &amp; 0 &amp; 1\\end{bmatrix}\\begin{bmatrix}\\widehat{e}_{x}\\\\\\widehat{e}_{y}\\\\\\widehat{e}_{z}\\end{bmatrix}\\]\\[\\begin{bmatrix}\\widehat{e}_{\\rho}\\\\\\widehat{e}_{\\theta}\\\\\\widehat{e}_{\\varphi}\\end{bmatrix} =\\begin{bmatrix}sin\\theta cos\\varphi &amp; sin\\theta sin\\varphi &amp; cos\\theta\\\\cos\\theta cos\\varphi &amp; cos\\theta sin\\varphi &amp; -sin\\theta\\\\-sin\\varphi &amp; cos\\varphi &amp; 0\\end{bmatrix}\\begin{bmatrix}\\widehat{e}_{x}\\\\\\widehat{e}_{y}\\\\\\widehat{e}_{z}\\end{bmatrix}\\]梯度 散度 旋度2梯度方向导数\\[\\frac{\\partial u}{\\partial \\vec{l} } = u_{x} cos\\alpha + u_{y} cos\\beta + u_{z} cos\\gamma \\quad (\\text{其中} cos\\alpha, cos\\beta, cos\\gamma \\text{为} \\vec{l} \\text{的方向余弦})\\]符号记为 \\(gradf\\) 或 \\(\\nabla f\\)\\[\\nabla = \\frac{1}{h_{1}}\\frac{\\partial}{\\partial u_{1}} \\widehat{e}_1 + \\frac{1}{h_{2}}\\frac{\\partial}{\\partial u_{2}} \\widehat{e}_2 + \\frac{1}{h_{3}}\\frac{\\partial}{\\partial u_{3}} \\widehat{e}_3\\]梯度与方向导数的联系：\\[\\frac{\\partial u}{\\partial \\vec{l}} = \\nabla u \\cdot \\vec{l}=\\lvert {\\nabla u}\\rvert \\lvert\\vec{l} ^{0} \\rvert cos\\varphi\\]当 \\(\\varphi = 0\\) 时，\\(\\frac{\\partial u}{\\partial \\vec{l}}\\) 取最大值；当 \\(\\varphi = \\pi\\) 时，\\(\\frac{\\partial u}{\\partial \\vec{l}}\\) 取最小值梯度积分公式（证明需要用到散度定理）\\[\\int_{V} \\nabla \\phi dV = \\oint_{S} \\phi dS\\]散度通量设向量场\\[\\vec{F} = P(x, y, z) \\vec{i} + Q(x, y, z) \\vec{j} + R(x, y, z) \\vec{k} , (x, y, z) \\in \\Omega\\]其中 \\(P，Q，R\\)具有一阶连续偏导数，\\(\\Sigma\\) 为场中的定侧曲面，则称曲面积分 \\(\\Phi = \\iint\\limits_{\\Sigma }^{} \\vec{F} \\cdot d\\vec{S}\\) 为向量场 \\(\\vec{F}\\) 通过定侧曲面 \\(\\Sigma\\) 的通量符号记为 \\(div \\vec{F}\\) ，\\(div \\vec{F} = \\nabla \\cdot \\vec{F}\\)散度定理/高斯定理：\\[{\\oiint}_{S^{+}} \\vec{F} \\cdot d\\vec{S} = \\iiint\\limits_{\\Sigma}^{} div \\vec{F} dV\\]即矢量场在 \\(S\\) 的通量等于其散度在 \\(S\\) 包围的区域上的三重积分旋度环量矢量\\(\\vec{A}\\)沿一闭曲线\\(\\vec{l}\\)的线积分定义为矢量\\(\\vec{A}\\)沿该闭合曲线的环量\\[\\Gamma = \\oint_{l} \\vec{A} \\cdot d \\vec{l}\\]符号记为\\(rot \\vec{F}\\) 或 \\(curl \\vec{F}\\)\\[rot \\vec{F} = \\nabla \\times \\vec{F} = \\vec{a}_{n} \\lim_{\\Delta S \\to 0} \\left ( \\frac{\\oint_{S} \\vec{F} \\cdot d \\vec{l}}{\\Delta S}\\right)\\]旋度定理\\[\\int_{V}(\\nabla \\times \\vec{A}) dV = - \\oint_{S} \\vec{A} \\times d \\vec{S} = \\oint_{S} d \\vec{S} \\times \\vec{A}\\]斯托克斯定理\\[\\oint_{C} Pdx + Qdy + Rdz = \\iint\\limits_{\\Sigma}\\begin{vmatrix} cos\\alpha &amp; cos\\beta &amp; cos\\gamma\\\\\\frac{\\partial }{\\partial x} &amp; \\frac{\\partial }{\\partial y} &amp; \\frac{\\partial }{\\partial z}\\\\P &amp; Q &amp; R \\end{vmatrix}dS\\]其中\\((cos\\alpha, cos\\beta, cos\\gamma)\\) 为 \\(\\Sigma\\) 上任意指定侧的单位法向量或\\[\\int_{S} (\\nabla \\times \\vec{A}) \\cdot d \\vec{S} = \\oint_{l} \\vec{A} \\cdot d \\vec{l}\\]公式揭示了沿曲面 \\(\\Sigma\\) 的曲面积分与其边界曲线 \\(C\\) 的曲线积分间的关系标量场与矢量场的性质梯度场的旋度恒为0\\[\\nabla \\times \\left( \\nabla u \\right) \\equiv 0\\]旋度场的散度恒为0\\[\\nabla \\cdot \\nabla \\times \\vec{A} \\equiv 0\\]标量场与矢量场的定理3标量格林定理标量第一格林定理\\[\\int_{V}(\\psi \\nabla^{2} \\phi + \\nabla \\psi \\cdot \\nabla \\phi )dV = \\oint_{S} (\\psi \\nabla \\phi )\\cdot \\vec{a}_{n}dS = \\oint_{S}\\psi \\frac{\\partial \\phi }{\\partial n} dS\\]\\[\\int_{V}(\\phi \\nabla^{2} \\psi + \\nabla \\phi \\cdot \\nabla \\psi )dV = \\oint_{S} (\\phi \\nabla \\psi )\\cdot \\vec{a}_{n}dS = \\oint_{S}\\phi \\frac{\\partial \\psi }{\\partial n} dS\\]特别地，当\\(\\phi = \\psi\\)时\\[\\int_{V}(\\phi \\nabla^{2} \\phi + |\\nabla \\phi|^{2} )dV = \\oint_{S} (\\phi \\nabla \\phi )\\cdot \\vec{a}_{n}dS = \\oint_{S}\\phi \\frac{\\partial \\phi }{\\partial n} dS\\]标量第二格林定理\\[\\int_{v} (\\phi \\nabla^{2} \\psi - \\psi \\nabla ^{2} \\phi )dV = \\oint_{S} (\\phi \\frac{\\partial \\psi }{\\partial n} - \\psi \\frac{\\partial \\phi }{\\partial n})dS\\]矢量场的唯一性定理一个矢量场被其散度、旋度和区域边界上的边界条件（边界上的切向或法向边界条件）唯一确定亥姆霍兹定理若矢量场\\(\\vec{f}\\)在给定的无限空间域\\(V\\)内处处单值，且其导数连续、有界，而源分布在有限区域中，则矢量场\\(\\vec{f}\\)可分解为无旋场\\(\\vec{f}_{d}\\)和无散场\\(\\vec{f}_{c}\\)之和，并且f可表示为一个标量函数的梯度与一个矢量函数的旋度之和，即\\[\\begin{align}\\vec{f} &amp;= \\vec{f}_{d} + \\vec{f}_{c} \\\\&amp;= - \\nabla \\phi + \\nabla \\times \\vec{A} \\\\ &amp;= - \\nabla \\left \\{ \\int_{V} \\left [ \\frac{\\nabla^{\\prime} \\cdot \\vec{f}(r^{\\prime}) }{4 \\pi R} dV^{\\prime} - \\oint_{S} \\left [ \\frac{\\vec{f}(r^{\\prime}) \\cdot \\vec{a}_n}{4 \\pi R} \\right ] \\right ] dS^{\\prime} \\right \\} \\\\&amp;+ \\nabla \\times \\left \\{ \\int_{V} \\left [ \\frac{\\nabla^{\\prime} \\times \\vec{f}(r^{\\prime})}{4 \\pi R}dV^{\\prime} \\right ] + \\oint_{S} \\left [ \\frac{\\vec{f}(r^{\\prime}) \\times \\vec{a}_n }{4 \\pi R} \\right ] dS^{\\prime} \\right \\}\\end{align}\\]正交曲线坐标系中场论的表达式标量\\(\\phi\\)的梯度\\[\\nabla f = \\frac{1}{h_{1}}\\frac{\\partial \\phi}{\\partial u_{1}} \\vec{a}_1 + \\frac{1}{h_{2}}\\frac{\\partial \\phi}{\\partial u_{2}} \\vec{a}_2 + \\frac{1}{h_{3}}\\frac{\\partial \\phi}{\\partial u_{3}} \\vec{a}_3\\]矢量\\(\\vec{A}\\)的散度\\[\\nabla \\cdot \\vec{A} = \\frac{1}{h_{1}h_{2}h_{3}} \\left [ \\frac{\\partial }{\\partial u_{1}} (h_{2}h_{3}A_{1}) + \\frac{\\partial }{\\partial u_{2}} (h_{1}h_{3}A_{2}) + \\frac{\\partial }{\\partial u_{3}} (h_{1}h_{2}A_{3}) \\right ]\\]矢量\\(\\vec{A}\\)的旋度\\[\\nabla \\times \\vec{A} = \\frac{1}{h_{1}h_{2}h_{3}} \\begin{vmatrix} h_{1}\\vec{a}_{1} &amp; h_{2}\\vec{a}_{2} &amp; h_{3}\\vec{a}_{3}\\\\\\frac{\\partial }{\\partial u_{1}} &amp; \\frac{\\partial }{\\partial u_{2}} &amp; \\frac{\\partial }{\\partial u_{3}}\\\\h_{1}A_{1} &amp; h_{2} A_{2} &amp; h_{3} A_{3}\\end{vmatrix}\\]\\(\\nabla^{2} \\phi\\)的展开式为\\[\\nabla^{2} \\phi = \\frac{1}{h_{1}h_{2}h_{3}} \\sum_{i=1}^{3} \\frac{\\partial}{\\partial u_{i}}(\\frac{h_{1}h_{2}h_{3}}{h_{i}^{2}}\\frac{\\partial \\phi}{\\partial u_{i}})\\]导出公式： \\(\\nabla^{2} \\vec{A} = \\nabla (\\nabla \\cdot \\vec{A}) - \\nabla \\times \\nabla \\times \\vec{A}\\)参考 郭旭涵.第8章 矢量分析与坐标变换[Z]，2023. &#8617; 上海交通大学数学学科学学院微积分课程组.大学数学 微积分[M].北京：高等教育出版社，2017：88-228. &#8617; 周希郎.电磁场与波基础[M].北京：机械工业出版社，2014：15-24 &#8617; " }, { "title": "macOS硬盘健康查询工具", "url": "/posts/CheckDiskLife/", "categories": "实用工具", "tags": "macOS", "date": "2023-11-20 12:30:00 +0000", "snippet": "很多 Mac 用户担心自己的 Mac 的硬盘寿命，想查看硬盘的读写量，接下来就介绍Smartmontools这款软件。安装 Homebrew复制以下代码框中的命令，粘贴到“终端”（Terminal） 中，回车运行如果你有代理，可以使用官方下载地址：/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/ins...", "content": "很多 Mac 用户担心自己的 Mac 的硬盘寿命，想查看硬盘的读写量，接下来就介绍Smartmontools这款软件。安装 Homebrew复制以下代码框中的命令，粘贴到“终端”（Terminal） 中，回车运行如果你有代理，可以使用官方下载地址：/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"如果你没有代理，可以使用镜像加快下载速度：/bin/zsh -c \"$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)\" 镜像提供下载源的选择，随便选取后按照提示完成安装即可。安装smartmontools复制以下命令，粘贴到“终端”中回车运行brew install smartmontools使用方法基础的运行方式在“终端”中依次运行：smartctl -s on disk0smartctl -a disk0命令记不住？教你优雅地运行打开“脚本编辑器”（Script Editor），新建一个文档。在窗口左上角选择“AppleScript”，粘贴以下代码到脚本编辑器中tell application \"Terminal\" to activatetell application \"Terminal\"\tdo script \"smartctl -s on disk0\"\tdo script \"smartctl -a disk0\"end tell之后点击右上角的 “▶︎”（运行）按钮即可执行更优雅的方式运行打开”自动操作”（Automator）新建文档，在模板面板中选择“Application”在搜索栏中搜索“AppleScript”并将模块拖入到右侧工作区将里面的文字替换为tell application \"Terminal\" to activatetell application \"Terminal\"\tdo script \"smartctl -s on disk0\"\tdo script \"smartctl -a disk0\"end tell保存为“Application”即可现在我们已经将这个脚本封装成软件了，下次直接双击运行就可以查看了" }, { "title": "SwiftUI Inspiration", "url": "/posts/SwiftUILearning/", "categories": "开发", "tags": "SwiftUI", "date": "2023-10-21 13:30:00 +0000", "snippet": "SwiftUI 小功能实现 我学习 Swift 过程中练习的小项目持续更新中… Lock SwiftUI View With Biometric/Custom Number Lock - Local Authentication Prevent Screenshot Custom In-App Custom Notification’s", "content": "SwiftUI 小功能实现 我学习 Swift 过程中练习的小项目持续更新中… Lock SwiftUI View With Biometric/Custom Number Lock - Local Authentication Prevent Screenshot Custom In-App Custom Notification’s" }, { "title": "实用网站导航", "url": "/posts/UtilityWeb/", "categories": "实用工具", "tags": "", "date": "2023-10-14 12:27:00 +0000", "snippet": "实用网站导航此博客将持续收录一些实用网站开发ab173: 包含网络、前端、后端等多种实用工具AppIconGenerator: 一站式生成适用于 iOS &amp; Android 各尺寸的应用图标MAKEAPPICON：同上HTML在线预览: 填入需要预览的HTML即可预览结果CSS to SCSS: CSS 转 SCSS设计素材iOS Icon Gallery: 包含高分辨率的 iOS ...", "content": "实用网站导航此博客将持续收录一些实用网站开发ab173: 包含网络、前端、后端等多种实用工具AppIconGenerator: 一站式生成适用于 iOS &amp; Android 各尺寸的应用图标MAKEAPPICON：同上HTML在线预览: 填入需要预览的HTML即可预览结果CSS to SCSS: CSS 转 SCSS设计素材iOS Icon Gallery: 包含高分辨率的 iOS App 图标， 收录几乎所有的 iOS 应用图标（watchOS/macOS 只需将网址相应修改）Aspose: 支持3DS/AMF/RVM/GTF/GLB/PDF/HTML/DRC/DAE/FBX/OBJ/STL/U3D/PLY/USD/USDZ/DOCX/XLSX/PPTX 的在线格式转换器FreePik: 包含众多平面和三维素材Mockupworld: 免费样机素材图像处理ClipDrop: 一站式移除图片背景，扩充图片等FreeCompress: 压缩 jpg/png/bmp/gifTinyPNG: 压缩 webp/png/jpegSVG 在线编辑器: 在线编辑 SVG 文件并导出文件处理白描: 较高精度的图片文字提取、数学公式识别、电子表格识别、扫描PDF转文字网站图书Zlibrary: 丰富的电子书网站隐私与安全各国信息生成器：可以生成各国虚拟的人物相关信息，帮助你应对特定网站的注册要求Where Is My IP Address: 根据 IPv4 和 IPv6 查询国家及地区SCAMALYTICS: 查询IP纯净度腾讯安全-网址安全中心: 检测网址是否可能为钓鱼链接文件传输SnapDrop: 通过相同局域网传输文件，打破生态壁垒，适用于 iOS/Android/macOS/Windows/Linux等JiDrop: 同上" }, { "title": "月饼建模+渲染", "url": "/posts/Mooncake/", "categories": "影视后期", "tags": "Cinema 4D, 静态渲染图", "date": "2023-10-04 13:25:00 +0000", "snippet": "概述 整个工程从建模到渲染完成大约12小时。 使用的工具：Cinema 4D、Octane X、Photoshop和Topaz Photo AI。 图片分辨率为3460x3460 效果图建模过程首先使用 PS 绘制月饼图案，并将各个部分分别制作成不同的图层，以便进行颜色调整和凹凸贴图。使用 C4D 的基础花瓣样条工具制作轮廓，然后进行挤压、置换和细分曲...", "content": "概述 整个工程从建模到渲染完成大约12小时。 使用的工具：Cinema 4D、Octane X、Photoshop和Topaz Photo AI。 图片分辨率为3460x3460 效果图建模过程首先使用 PS 绘制月饼图案，并将各个部分分别制作成不同的图层，以便进行颜色调整和凹凸贴图。使用 C4D 的基础花瓣样条工具制作轮廓，然后进行挤压、置换和细分曲面操作，得到基本的月饼主体。其他模型的制作较为基础，可以采用已有资产。PS中设计贴图接下来进行材质的设置，首先进行光照调整，在使用 HDR 贴图找到适合的光源后，添加区域光进行补光。利用 Photoshop 制作的贴图，并借助 OC 节点编辑器完成贴图的制作。渲染使用 OC 渲染器的“路径追踪”，以使图像在物理上更加真实，反射等效果更好。在摄像机设置中调整焦距，以突出景深效果，使目光聚焦在月饼上。为了改善图像质量并考虑渲染时间，我选择了1000spp（每像素采样次数）的采样率。难点 月饼的贴图制作。由于在建模过程中，我将整体挤压出来，导致表面由密集的四边形构成，因此很难创建新的选区进行贴图。因此，只能不断调整 logo 的大小，直到完全契合模型边缘，并将齿轮内部的绿色和月饼皮作为两个贴图应用到模型上。期间，我不断调整光照强度、色温和贴图颜色，以获得更好的最终效果。月饼细节 葡萄的贴图。根据已有的绿色葡萄贴图，不断尝试调整色调、饱和度和伽马值，将其调整为更加自然的紫色。为了展现葡萄的透亮和成熟感，需要使用三种材质：光泽、透明和混合。未渲染的场景" }, { "title": "用Shortcuts+Numbers做一个便捷记账程序", "url": "/posts/MoneyTrackerShortcuts/", "categories": "软件应用", "tags": "Shortcuts", "date": "2023-08-20 00:26:00 +0000", "snippet": "概述 编译环境：iOS 17.0 程序支持的设备：运行 iOS、iPadOS、macOS 的所有设备。建议设备系统：iOS 16 及以上、iPadOS 16 及以上、macOS Ventura 及以上。 2024.04.09更新：移除了英文版，增加了对中文版的支持，目前此发行版只可在中文系统下运行；修改了代码逻辑，丰富了子类，增强了自定义内容功能灵感来源当前市面上有太多记账软件，然而不...", "content": "概述 编译环境：iOS 17.0 程序支持的设备：运行 iOS、iPadOS、macOS 的所有设备。建议设备系统：iOS 16 及以上、iPadOS 16 及以上、macOS Ventura 及以上。 2024.04.09更新：移除了英文版，增加了对中文版的支持，目前此发行版只可在中文系统下运行；修改了代码逻辑，丰富了子类，增强了自定义内容功能灵感来源当前市面上有太多记账软件，然而不少带有云端功能或者付费分级功能。对于高隐私性的数据，其服务器的安全性未知，所以我想做一个本地可用的免费记账软件。那么直接做一个 App 上架 App Store 当然是上策，然而这对个人开发者极不友好：不仅每年要交 $99（¥688）的开发者账号费，而且软件维护要消耗大量精力。所以我结合 Shortcuts 和 Numbers 做了一个记账程序。功能介绍/优点 支持总览，可视化数据图表帮助直观了解资金去向； 支持分类，当前默认分类可以包含目前几乎所有的门类，并且支持具体备注资金去向； 支持云同步、多设备互通。此云同步使用的是 Apple 原生 iCloud，可以极大地保护个人隐私（当然如果不想使用，可以关闭同步）； 拥有强大的自定义功能，可自己添加二级子类； 操作便捷，添加小组件后在主屏幕上就可以直接完成记账；使用方法 从 App Store 上下载 Shortcuts 和 Numbers，macOS的Numbers在此; 导入 Numbers 模板（如果链接失效了，请在此下载），如果想要使用云功能和多设备互联功能，请将此文件放到 iCloud 文件夹下； 导入 Shortcuts 快捷指令，如果显示“不允许不受信任的快捷指令”，请查看此相关文章； 按图示配置文件： 自定义子类 演示图片：注意事项 请在使用前仔细阅读文章内容（包括图片中的提示）； 请勿随意更改快捷指令中的程序，除非您对里面程序的内容非常了解； 当前 Numbers 限制无法将表格长度自动延伸，如有需要请手动延长； 如果已导入模板，下次想通过模板创建新的表格时，请记得在快捷指令中按照图片第6、7步重新修改文件位置，否则新数据会写入原有文件。最后如果您有好的建议或者对这篇文章有疑问，欢迎随时通过 Email 或下方评论区进行留言！" }, { "title": "蛋糕场景渲染", "url": "/posts/Cake/", "categories": "影视后期", "tags": "Cinema 4D, 静态渲染图", "date": "2023-06-14 12:21:00 +0000", "snippet": "概述 整个工程从建模到渲染完成大约3小时。 使用的工具：Cinema 4D、Octane X。 图片分辨率为1190x2100 这是我第一个尝试用 Octane X 制作的作品 素材来源于每天逛一逛的小林效果图技巧 在 Octane X 中，了解不同材质之间的区别以及各个参数的调节方法非常重要。例如，如果要给奶油效果增加真实感，可以使用光泽材质球，并适当调节粗糙度、折射率、凹凸、...", "content": "概述 整个工程从建模到渲染完成大约3小时。 使用的工具：Cinema 4D、Octane X。 图片分辨率为1190x2100 这是我第一个尝试用 Octane X 制作的作品 素材来源于每天逛一逛的小林效果图技巧 在 Octane X 中，了解不同材质之间的区别以及各个参数的调节方法非常重要。例如，如果要给奶油效果增加真实感，可以使用光泽材质球，并适当调节粗糙度、折射率、凹凸、法线等参数。通常情况下，应该根据物理世界物体的折射率进行调节，以确保光线在经过折射和反射后能够正确计算。然而，在某些情况下，可以根据场景的大小进行微调。 布光是场景渲染中非常重要的一步。正所谓”三分建模，七分渲染”，在渲染过程中，光照更是占据了七成的重要性。只有在适当的光照条件下，才能真实地表现物体的明暗和阴影。因此，在应用材质之前，先进行布光是必要的。可以制作一个金属球体来反射 HDR 环境贴图，并通过调整球体的 UV 变换参数（Tx、Ty、Tz）来使光照适应场景。白模无HDR光照白模有HDR光照 摄像机的焦距和光圈也是需要注意的。在实时预览窗口中，可以点击对焦并微调摄像机的焦距和光圈。曝光、滤镜等参数可以根据场景的需求主观进行调节。 对于渲染设置，为了提高性能利用率并减少渲染时间，可以将静帧采样率设置为2000spp，并将 GI clamp 调整为1。对于摄像机外的画面，如果不需要上材质，可以简化处理。对于主体外的画面，由于景深效果通常比较模糊，贴图可以不需要过于精细。渲染器对比Cinema 4D 在 R23 版本以后停止提供 ProRender 渲染器，这意味着如果想要使用 GPU 渲染，就需要借助第三方渲染器。目前在国内，Octane 渲染器是主流的 GPU 渲染器之一。相比 CPU 渲染器，GPU 渲染器采用了先渲染轮廓再逐步采样的方式，这一过程能够更快地生成预览图像，并且允许艺术家在渲染过程中进行实时交互和反馈。而标准渲染器则直接渲染整个区域，虽然渲染速度可能较慢，但在一些特定场景下，仍然是一种可行的选择。Octane 渲染器在光照、材质等方面具有一定的优势。它提供了丰富的材质库和灯光选项，使创作者能够更轻松地创建逼真的渲染效果。此外，Octane 还支持 GPU 加速，利用显卡的并行计算能力，能够更快地完成渲染任务。然而，渲染器的选择并没有绝对的优劣之分，每个渲染器都有其独特的特点和适用场景。在选择渲染器时，需要综合考虑项目要求、工作流程和个人技能。如果项目需要快速迭代和实时预览，以及对材质和光照有较高要求，那么使用 Octane 等 GPU 渲染器可能是一个不错的选择。然而，对于一些对渲染速度要求不高或更注重细节和精确控制的项目，仍然可以选择标准渲染器或其他适合的渲染器。关键在于了解不同渲染器的特点和功能，并根据项目需求做出明智的选择。精通和熟练掌握一种渲染器，无论是 GPU 渲染器还是 CPU 渲染器，都能创造出令人惊艳的视觉效果。" }, { "title": "解决macOS无法验证App等问题", "url": "/posts/AuthorizeUnknownDeveloper/", "categories": "实用工具", "tags": "macOS", "date": "2023-04-02 02:01:00 +0000", "snippet": "问题来源有时在 macOS 上安装或打开文件会提示：无法打开“xxx”，因为它来自身份不明的开发者。“XXX”已损坏，无法打开。你应该推出磁盘映像。无法打开“XXX”，因为Apple无法检查其是否包含恶意软件。“XXX”已损坏，无法打开。你应该将它移到废纸篓。这些错误信息通常与操作系统或应用程序的安全设置和文件完整性有关，它们旨在保护计算机免受潜在的恶意软件或损坏文件的威胁。对于一些 cra...", "content": "问题来源有时在 macOS 上安装或打开文件会提示：无法打开“xxx”，因为它来自身份不明的开发者。“XXX”已损坏，无法打开。你应该推出磁盘映像。无法打开“XXX”，因为Apple无法检查其是否包含恶意软件。“XXX”已损坏，无法打开。你应该将它移到废纸篓。这些错误信息通常与操作系统或应用程序的安全设置和文件完整性有关，它们旨在保护计算机免受潜在的恶意软件或损坏文件的威胁。对于一些 cracked 应用，这种提示常常会弹出，然而这可能只是 crack 之后导致签名失效而造成的，对于系统安全性并无其他影响，那么我们需要手动允许其运行在我们的电脑上。接下来我将阐述如何解决这些问题。解决方法开启允许“任何来源”打开“终端”，粘贴以下命令，回车执行sudo spctl --master-disable此时提示输入密码，输入用户登录密码，然后回车。（输入密码时内容不可见）接着打开“系统设置” ，选择“安全性与隐私”，可看到“任何来源”已经选定（您可能需要向下滚动页面）。 在macOS Monterey 及以前版本中打开“系统偏好设置”，选择“安全性与隐私”，选择“通用”，可以看到“任何来源”已经选定。此时您已允许 Mac 安装任何来源的 App。已损坏修复在终端粘贴复制输入命令（注意最后有一个空格）：sudo xattr -r -d com.apple.quarantine 然后打开 “访达” ，进入“应用程序”目录，找到该软件图标，将图标拖到刚才的终端窗口里面，会得到如下组合（以微信为例）：sudo xattr -r -d com.apple.quarantine /Applications/WeChat.app在“终端”中按回车，输入系统密码后回车即可。仍显示已损坏，需要移到废纸篓打开“访达”，进入“应用程序”目录，找到该软件，右键（或按住“control 键点击），在弹出菜单中选择”打开”。之后软件就可正常打开。至此，软件应当可以正常运行了。" }, { "title": "新春快乐 动画（2023）", "url": "/posts/HappyNewYear2023/", "categories": "影视后期", "tags": "Cinema 4D, 动画", "date": "2023-01-21 12:23:00 +0000", "snippet": "概述 整个工程制作用时约1个月。 使用的工具：Cinema 4D、After Effects、PhotoShop、Final Cut Pro、 Keynote。 原视频分辨率为1920x1080 尝试独立制作3D动画效果图创作过程准备阶段创作这个春节视频的想法最初在 2022 年的六七月份产生。当时，我只是有一个初步的想法，但还没有具体的草稿，因为我还不会制作三维视频。9月，进入大学...", "content": "概述 整个工程制作用时约1个月。 使用的工具：Cinema 4D、After Effects、PhotoShop、Final Cut Pro、 Keynote。 原视频分辨率为1920x1080 尝试独立制作3D动画效果图创作过程准备阶段创作这个春节视频的想法最初在 2022 年的六七月份产生。当时，我只是有一个初步的想法，但还没有具体的草稿，因为我还不会制作三维视频。9月，进入大学后，我每个周末都会腾出时间学习三维软件的使用。查找众多资料后，我选择了 Cinema 4D（简称C4D）这款软件。选择这款软件的原因主要有两点：首先，C4D 是比较主流的软件，有较多教程可供学习；其次，相对于Blender和Maya，C4D 的门槛较低，用户界面友好。在接下来的一个月里，我学会了切换视图、创建几何体、移动摄像机、添加材质等基本操作。很快，时间来到了11月，我也已经会自己制作一些模型。主题确定随着春节的临近，由于期末考试阶段的学业压力增大，我被迫暂停了一段时间的策划工作。直到考试结束，此时离春节只有一个月的时间了，我靠在椅子上，凝视着空白的屏幕，思考良久。从动画主题到动画背景经过我多方面考量，最后，确定了以礼盒为切入点的动画场景。素材选择带有 2023 年纪念奖杯的模型是我在 10 月开始制作的，材质和模型效果都不成熟，虽然后来有一些改动的想法，但考虑到它对我初次建模的纪念意义，我最终决定保留原样。房间背景我从网上找了不少参考，考虑到时间成本和我的建模水平，最后选择了较为紧密的房间一角。模型制作贴图和模型都要自己动手制作，工作常态就是桌面上开着一堆应用，然后在其间来回横跳。每个模型都是先独立建造再导入到工程中的，细节刻画可以说是相当多的（虽然放在动画里看不清了）。iMac书笔记本Magic KeyboardMagic Mouse展示台礼盒动画制作摄像机的运镜和物体的移动都需要经过精确的计算和设计。同时，我还需要不断调整光照强度和色温，以达到稍微昏暗的效果。其中最具挑战的是礼物盒子的抖动效果。由于我在方向角度上加入了随机种子，我无法保证每一帧都不出现穿模的情况。因此，我只能一帧一帧地播放并进行修改。在视频的开头，为了增加一些新奇感，我尝试让画面从封面自然地过渡到屋内（这部分详细内容将在下面的”细节”中展开说明）。由于使用三维软件制作粒子模拟烟花会消耗大量计算资源，因此我决定使用 AE 来制作烟花效果，然后将其导入到 FCP 中，通过添加遮罩将其与原视频融合，以完成整个过程。细节在这个视频中，我加了些小细节，本以为最后呈现的效果很清晰，可作彩蛋，但没想到在上传到 QQ 时，分辨率和帧率被压缩了😭。借此机会我补充一下：键盘键盘上的所有键位都是我一个一个肝出来的，有的符号不常见，而 Apple 原生也未在 emoji 里加入支持，所以自己用 PS 做了一些来还原键位本来的样子。当时不会用置换效果，浪费了不少时间。笔记本上面写的是“One more thing”，意味着我会在2023年再发一个作品，当然你也应该知道是什么了。👉https://jo-cruise.github.io/posts/Mooncake/挂钟墙上的挂钟指的时间是20:23。视频的形式我想，既然是动态应该可以尝试一种新颖的方式。因为我从来没有见过有人发九宫格动态中间放上视频，且视频是从封面无缝切换到视频的，所以我想尝试着做一下。这个想法很简单，但是实际操作并非如此。由于视频是1920x1080的分辨率，而 QQ 动态预览图是正方形，它会隐去超出的部分，而且正方形预览图是截取视频中间的正方形，所以想要达到视频和图片无缝衔接在一起，还要经过无数次尝试，不断纠正坐标。基本思路是导入剪辑软件，把原来的九宫格图片放在最底下，居中。再在上面覆盖视频，调整放大比例、x/y坐标，即可快速解决。QQ 动态预览图有效区发布前的准备为了确保视频的完美呈现，我进行了大量的测试工作：我反复观看这个视频，发现不满意的就重新改，前前后后改了十几版。有的时候即使只有几帧不合适，我也要重新修改。这个过程是漫长而痛苦的，因为重新渲染要消耗大量时间，这时候我只能盯着计算机慢慢渲染，却无任何办法。此外我对动态预发布，观看可能呈现的效果，如有漏洞，及时更改。一点点感慨虽然构想是好的，但苦于当时技术能力不足，无法呈现想象中的效果。但是制作过程中我学到了很多新的知识，现在看来算是差强人意吧！" }, { "title": "访客指南", "url": "/posts/Welcome/", "categories": "", "tags": "", "date": "2022-06-09 15:59:59 +0000", "snippet": "这个网站用来做什么？目前我会分享一些我的学习过程、知识、技术等。该网站分享的博客会坚持原创性，不生产同质化文章。如果你对我的项目感兴趣，欢迎一同学习交流：☝️Find me via WeChat👀Find me on GitHub Pages 👉: https://jo-cruise.github.io", "content": "这个网站用来做什么？目前我会分享一些我的学习过程、知识、技术等。该网站分享的博客会坚持原创性，不生产同质化文章。如果你对我的项目感兴趣，欢迎一同学习交流：☝️Find me via WeChat👀Find me on GitHub Pages 👉: https://jo-cruise.github.io" } ]
