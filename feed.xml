<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://jo-cruise.github.io/</id><title>Jo Cruise</title><subtitle>I write stuff.</subtitle> <updated>2025-01-31T15:08:00+00:00</updated> <author> <name>Jo Cruise</name> <uri>https://jo-cruise.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://jo-cruise.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="zh-CN" href="https://jo-cruise.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator> <rights> © 2025 Jo Cruise </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Xcode 无需开发者账号分发 iOS app</title><link href="https://jo-cruise.github.io/posts/Xcode_no_dev_account/" rel="alternate" type="text/html" title="Xcode 无需开发者账号分发 iOS app" /><published>2025-01-31T15:06:00+00:00</published> <updated>2025-01-31T15:06:00+00:00</updated> <id>https://jo-cruise.github.io/posts/Xcode_no_dev_account/</id> <content src="https://jo-cruise.github.io/posts/Xcode_no_dev_account/" /> <author> <name>jo</name> </author> <category term="Development" /> <summary> 在菜单栏上选择”Product-&amp;gt;Archieve”，稍等片刻，项目归档完毕后会弹出窗口 在弹出的窗口中右键，选择“在访达中显示” 对xcarchive后缀的文件右键，选择“显示包内容” 进入文件”Products”，将”Applications”这个文件夹改名为”Payload”，之后右键压缩。将压缩的zip文件后缀改为ipa，前面文件名可以自定义，这样就得到了安装包 必须有Payload文件夹，这是iOS程序正确运行的关键 最后使用自签工具即可安装到其他人的设备上，这样无需开发者账号，也无需Xcode多次部署。 </summary> </entry> <entry><title>SwiftUI 计算器使用指南</title><link href="https://jo-cruise.github.io/posts/SwiftUICalculatorIntroduction/" rel="alternate" type="text/html" title="SwiftUI 计算器使用指南" /><published>2024-06-24T06:40:00+00:00</published> <updated>2024-06-24T06:40:00+00:00</updated> <id>https://jo-cruise.github.io/posts/SwiftUICalculatorIntroduction/</id> <content src="https://jo-cruise.github.io/posts/SwiftUICalculatorIntroduction/" /> <author> <name>jo</name> </author> <category term="SwiftUI" /> <summary> 主屏幕快捷操作 通过使用 Haptic Touch 来触发快捷操作，上次计算的结果将保存在剪贴板中 计算功能 与iPhone原生计算器相同，四则运算的优先级进行运算，支持百分号、符号切换、连等等运算顺序及逻辑，支持滑动删除最后一位。 文本替换功能 输入触发密钥（初始值为12345）并长按来进入设置界面。在“设置-文本替换”中点击右上角加号新增文本替换。输入码是触发字符，通常为数字，短语为要替换成的文本。设置成功后摇动您的iPhone即可替换显示。 您可以轻点来编辑文本替换，向右滑动来禁用某一文本替换，也可向左滑动删除该文本替换。 表情雨功能 当短语中包含以下emoji的其中之一就会触发表情雨： 🎂 💕 🫶 🫰 🥰 🥳 💓 ❤️ ✨ 😘 您可以在设置中控制表情雨生成速率、持续时长。 触感反馈 当在设置中打开“触感反馈... </summary> </entry> <entry><title>使用 SwiftUI 来做仿做一个原生计算器(技术篇)</title><link href="https://jo-cruise.github.io/posts/SwiftUICalculator/" rel="alternate" type="text/html" title="使用 SwiftUI 来做仿做一个原生计算器(技术篇)" /><published>2024-06-24T06:40:00+00:00</published> <updated>2024-12-04T10:43:09+00:00</updated> <id>https://jo-cruise.github.io/posts/SwiftUICalculator/</id> <content src="https://jo-cruise.github.io/posts/SwiftUICalculator/" /> <author> <name>jo</name> </author> <category term="SwiftUI" /> <summary> 概述 这里我们将会使用MVVM架构来编写这个项目，本文将主要探讨计算器计算功能实现的步骤。 代码已开源：https://github.com/Jo-CRuiSe/SwiftUICalculator Views calcButtonView：单个按钮样式 contentsView：计算器app样式 ViewModel(ContentViewModel) 变量定义 @Published var display: String = "0" //计算器显示字符 @Published var action: Action? //按键操作 @Published var constantlyLit: Bool = false //操作是否常亮 @Published var ACPressed = false //是否按下AC键 private var operandSta... </summary> </entry> <entry><title>新春快乐 动画（2024）</title><link href="https://jo-cruise.github.io/posts/HappyNewYear2024/" rel="alternate" type="text/html" title="新春快乐 动画（2024）" /><published>2024-02-09T12:24:00+00:00</published> <updated>2024-02-11T11:37:32+00:00</updated> <id>https://jo-cruise.github.io/posts/HappyNewYear2024/</id> <content src="https://jo-cruise.github.io/posts/HappyNewYear2024/" /> <author> <name>Jo Cruise</name> </author> <category term="影视后期" /> <summary> 概述 使用的工具：Cinema 4D、After Effects、Photoshop、Keynote 制作周期约 25 天 视频分辨率为 1920x1080，帧率25fps，原视频体积591.2MB1 为了更流畅的阅读体验，文章中的图片并非原本无损格式的图片，而是经过压缩后的图片。 创作过程 素材选取 与普通剪辑和特效不同的是，制作3D动画是一个完全从无到有的过程，没有任何现成的片段可供参考。这个过程需要经历建模、动画、材质、渲染和后期等一系列步骤。其中的难点在于如何将想象中的场景构建出来、如何构图以及如何使其具有连贯性。首先，我们需要确定表现风格，是卡通风格还是写实风格？然后，收集与该主题相关的素材元素。有时候，仅凭空想很难具体化，这时我们可以在网上寻找优秀摄影师和设计师的作品作为参考素材，如此上手便容易许多。 时间线 1.16 ～ 1.19 完成分... </summary> </entry> <entry><title>How to Use UPE</title><link href="https://jo-cruise.github.io/posts/HowToUseUPE/" rel="alternate" type="text/html" title="How to Use UPE" /><published>2024-02-06T01:41:00+00:00</published> <updated>2024-02-24T01:38:01+00:00</updated> <id>https://jo-cruise.github.io/posts/HowToUseUPE/</id> <content src="https://jo-cruise.github.io/posts/HowToUseUPE/" /> <author> <name>jo</name> </author> <category term="Tutorial" /> <summary> 先决条件 请先根据 README 来完成基本配置。 配置方法 注册 Leancloud 为了能够使用登录功能，请注册Leancloud作为后端 登录注册网址：https://console.leancloud.cn/register，在左上角选择华北节点 华东地区节点在2024.1.30关闭，国际版对国内评论系统有限制 创建应用 注册完成后左上角选择Create app，App name随意取，在”App price plan”中选择Developer，完成后点击Create 应用设置 进入app的设置，在侧边栏选择”Settings”-“App keys”（可能需要向下滚动） 这里的AppID、AppKey和Server URLs对应_config.yml文件中的相应内容 Leancloud: appId: 'exampl... </summary> </entry> </feed>
